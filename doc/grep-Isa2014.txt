Isabelle2014/src $ grep -r "XML\.Decode" *

Pure/Thy/present.scala:      import XML.Decode._

Pure/General/graph.scala:  def decode[Key, A](key: XML.Decode.T[Key], info: XML.Decode.T[A])(implicit ord: Ordering[Key])
Pure/General/graph.scala:      : XML.Decode.T[Graph[Key, A]] =
Pure/General/graph.scala:      import XML.Decode._

Pure/General/completion.scala:            import XML.Decode._
Pure/General/completion.scala:                import XML.Decode._
Pure/General/symbol.scala:  def decode_string: XML.Decode.T[String] = (x => decode(XML.Decode.string(x)))

Pure/Tools/build.scala:    def parse(text: String): Properties.T = XML.Decode.properties(YXML.parse_body(text))
Pure/Tools/print_operation.scala:        import XML.Decode._

Pure/PIDE/protocol.scala:        import XML.Decode._
Pure/PIDE/protocol.scala:        import XML.Decode._

Pure/term_xml.scala:    import XML.Decode._


Tools/Graphview/src/model.scala:  val decode_info: XML.Decode.T[Info] = (body: XML.Body) =>
Tools/Graphview/src/model.scala:    import XML.Decode._
Tools/Graphview/src/model.scala:  val decode_graph: XML.Decode.T[Graph] =
Tools/Graphview/src/model.scala:    isabelle.Graph.decode(XML.Decode.string, decode_info)
wneuper@ProBook:/usr/local/Isabelle2014/src$ 

DELETED *.ML

